c
@task
@type_list.count
c
@task
@type_list.count
c
@task
@type_list.count
@type_list
c
n
c
task['custom_fields'][1].nil?
!task['custom_fields'][1].nil?
task['custom_fields'][1] == false
task['custom_fields'][1]
task['custom_fields'][1].nil?
task['custom_fields'][1]
task['custom_fields'][1]['value']
c
n
c
n
task['custom_fields'][1]
c
n
task['custom_fields'][1]
task['custom_fields']
c
n
availabilities.sort_by{|h| [h['username'], h['date']]}.reverse.uniq!{|h| h['username'] }
availabilities
c
availabilities.sort_by{|h| [h['username'], h['date']]}.reverse.uniq!{|h| h['username'] }c
availabilities.sort_by{|h| [h['username'], h['date']]}.reverse.uniq!{|h| h['username'] }
availabilities.sort_by{|h| [h['username'], h['date']]}.reverse
availabilities.sort_by{|h| [h['username'], h['score']]}.reverse
availabilities.sort_by{|h| h['username'], h['score']}.reverse
availabilities.sort_by{|h| h['username'], h[''score]}
availabilities.sort_by{|h| h['username'], h['score']}.reverse
availabilities
availabilities.sort_by{|h| h['username'], h['score']}.reverse
c
availabilities.sort_by{|h| h['username'], h['score']}.reverse
availabilities.sort_by{|h| h["name"], h[""]}
availabiities.sort_by {|name, age| [age, name] }
availabiities.map{|h| h['username']}.uniq
availabiities.map{|h| h['username']}
availabiities.map(&:username)
availabilities.map(&:username)
availabilities.map(&:username).uniq
availabiities
c
Date.yesterday.strftime('%Y-%m-%d')
Date.today.strftime('%Y-%m-%d') - 1.day
Date.today.strftime('%Y-%m-%d') -1.day
Date.today.strftime('%Y-%m-%d')
Date.today.strftime('%m/%d/%Y')
Date.today
availabiities
availabilities
c
n
needs
needw
n
response["results"]
n
response
c
get_response
c
get_response
n
c
availabiities
availabilities
n
c
n
c
n
drafts.select{|draft| draft['cuid'] == "42560944"}.map{|d| d['score']}
drafts.select{|draft| draft['cuid'] == "42560944"}.map{|d| d[:score]}
drafts.select{|draft| draft['cuid'] == cuid}.map{|d| d[:score]}
drafts
c
availabiities.count
availabiities
availabilities
c
n
response
n
c
params['duration'] == '1' ? 'past_week' : 'latest'
params['duration'] == 1 ? 'past_week' : 'latest'
params['duration']
duration
c
n
response["results"]
c
response["results"]
n
result
c
response["results"][0]["properties"]
response["results"][0]["properties"]["Availability score"]
response["results"][0]["properties"]["Availability score"]["number"]
response["results"][0]["properties"]["ClickUp User id"]["rich_text"][0]["text"]["content"]
response["results"][0]["properties"]["ClickUp User id"]["rich_text"][0]["text"]
response["results"][0]["properties"]["ClickUp User id"]["rich_text"]["text"]
response["results"][0]["properties"]["ClickUp User id"]["rich_text"]
response["results"][0]["properties"]["ClickUp User id"]["id"]
response["results"][0]["properties"]
response["results"][0]["properties"]["Availability score"]
result["properties"]["ClickUp User id"]
response["results"][0]["properties"]
response["results"][0]["ClickUp User id"]
response["results"][0]
response["results"]
n
cuid_list
response["results"]
response[:results]
response.results
response.keys
response
c
response
n
response
n
c
response
n
hash
n
report_db
n
c
response
n
c
hash
n
c
n
c
response
n
hash
n
c
n
@dates
n
c
n
c
n
c
cc
c
da
c
da
n
da
n
da
n
da
c
response["id"]
response.keys
response
n
c
n
c
response
n
c
n
c
response
n
c
n
response
n
c
response
n
c
n
c
n
c
n
c
DailyReport.create_daily_availabilities
c
response
n
c
n
response
c
branch
c
User.find_by(id: 1).id
User.find_by(id: 1)
User.find_by(gid: commit['author']['id'].to_s)
User.find_by(gid: commit[')
n
response
n
branch
c
branch
c
branch
c
Branch.all
branch
c
cc
c
cc
c
cc
c
n
fin
cc
c
s
help
quit
q
c
User.find_by(gid: 42637947.to_s)
User.find(1)
task
n
child
n
child
n
Commit.where(branch_id: task.branch.id).first(7).count
Commit.where(branch_id: task.branch.id).first(7)
n
