<div class="container" style="padding: 10px;">
<div class="pagetitle">
    <h1>Team report</h1>
    <nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Report</a></li>
        <li class="breadcrumb-item active">Team report</li>
    </ol>
    </nav>
</div><!-- End Page Title -->

<section class="section dashboard">
    <div class="row">
        <div class="col-12">
            <!-- Self scoring -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Member status <span>| This Week</span></h5>
                    <!-- Select user -->
                    <select id="user-selection">
                        <% @user_list.each do |user| %>
                        <option value="<%= user.id.to_s%>"><%= user.username%></option>
                        <% end %>
                    </select>
                    &nbsp;<button id="btn-user" onclick="selectUser()" class="btn btn-custom-success btn-sm" ><i class="fa-solid fa-play" style="color: white;"></i></button>
                    <!-- End Select user -->
                    <!-- Line Chart -->
                    <div id="teamReportsChart"></div>

                    <script>
                    var apexChart;
                    document.addEventListener("DOMContentLoaded", () => {
                        apexChart = new ApexCharts(document.querySelector("#teamReportsChart"), {
                        series: [
                                {name: 'Help availability',
                                data: ['<%=@availabiity[0]%>', '<%=@availabiity[1]%>', '<%=@availabiity[2]%>', '<%=@availabiity[3]%>', '<%=@availabiity[4]%>']}
                                ,
                            <% @tasks.each_with_index do |task, i|%>
                                {name: '<%= task[:name]%>',
                                data: ['<%=task[:scores][0]%>', '<%=task[:scores][1]%>', '<%=task[:scores][2]%>', '<%=task[:scores][3]%>', '<%=task[:scores][4]%>']}
                                <% if @tasks.count-1 != i%>
                                ,
                                <% end %>
                            <% end %>
                        ],
                        chart: {
                            height: 350,
                            type: 'area',
                            toolbar: {
                            show: false
                            },
                        },
                        markers: {
                            size: 4
                        },
                        colors: ['#FFB6C1', '#4154f1', '#2eca6a', '#ff771d', '#5F9EA0'],
                        fill: {
                            type: "gradient",
                            gradient: {
                            shadeIntensity: 1,
                            opacityFrom: 0.3,
                            opacityTo: 0.4,
                            stops: [0, 90, 100]
                            }
                        },
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            curve: 'smooth',
                            width: 2
                        },
                        xaxis: {
                            type: 'datetime',
                            categories: ['<%= @dates[0]%>', '<%= @dates[1]%>', '<%= @dates[2]%>', '<%= @dates[3]%>', '<%= @dates[4]%>']
                        },
                        tooltip: {
                            x: {
                            format: 'dd/MM/yy HH:mm'
                            },
                        }
                        });
                        apexChart.render();
                    });
                    const btn_user = document.querySelector('#btn-user');
                    const ub = document.querySelector('#user-selection');
                    var selectedValues;

                    btn_user.onclick = (e) => {
                        e.preventDefault();
                        selectedValues = [].filter
                            .call(ub.options, option => option.selected)
                            .map(option => option.value);
                        var uid = selectedValues[0];
                        $.ajax({
                        url: '/notion/select_user.json',
                        data: {uid: uid},
                        dataType: "json",
                        success: function(response) {
                        var dates = response.dates;
                        var availabiity = response.availabiity;
                        var tasks = response.tasks;
                        var task_map = [{ name: 'Help availability',
                                          data: [availabiity[0], availabiity[1], availabiity[2], availabiity[3], availabiity[4]] }];
                        tasks.forEach(function (task, i) {
                            task_map.push({
                                name: task.name,
                                data: [ task.scores[0], task.scores[1], task.scores[2], task.scores[3], task.scores[4] ]
                            })
                        });

                        try{
                        apexChart.updateOptions({
                            series: task_map,
                            xaxis: {
                                    type: 'datetime',
                                    categories: [dates[0], dates[1], dates[2], dates[3], dates[4]]
                            }
                        });
                        }
                        catch(e){
                        alert(e)
                        }
                        },
                        error: function(error){console.log(error)}
                        });
                    };
                    </script>
                    <!-- End Line Chart -->
                </div>
            </div><!-- End Self scoring -->

            <!-- Member availability  -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Member availability <span>| This Week</span></h5>
                    <!-- Select task & duration -->
                    &nbsp;<select id="av-task-selection">
                        <% @task_list.each_with_index do |task, i| %>
                        <option value="<%= i.to_s%>-<%= task.id.to_s%>"><%= task.name%></option>
                        <% end %>
                    </select>
                    &nbsp;<button id="btn-av-task" onclick="selectAvTask()" class="btn btn-custom-success btn-sm" ><i class="fa-solid fa-play" style="color: white;"></i></button>
                    <select id="av-duration-selection">
                        <% @duration_list.each_with_index do |duration, i| %>
                        <option value="<%= i.to_s%>"><%= duration%></option>
                        <% end %>
                    </select>
                    &nbsp;<button id="btn-av-duration" onclick="selectAvDuration()" class="btn btn-custom-success btn-sm" ><i class="fa-solid fa-play" style="color: white;"></i></button>
                    <!-- End Select task & duration -->
                    <% @task_list.each_with_index do |task, i| #assuming that maximun number of teammates = 6 %>
                        <div class="wrap-circles" id= "wrap-av-task-<%=i.to_s%>" style="display: none;">
                        <% 6.times do |j|%>
                            <div class="circle per-av-user-<%=j%>" style="display: none;">
                                <div class="inner"><div class="name-av-<%= j%>"></div></div>
                            </div><br/>
                            <div class="score-av-<%= j%>" style="font-size: 28px; margin-top: 120px; color: #9dd0be;"></div>
                        <% end %>
                        </div>
                    <% end %>
                    <script>
                        const av_task = document.querySelector('#av-task-selection');
                        const button_av_task = document.querySelector('#btn-av-task');
                        const av_duration = document.querySelector('#av-duration-selection');
                        const button_av_duration = document.querySelector('#btn-av-duration');

                        var selectedAvTaskValue;
                        var selectedAvDurationValue;
                        var i_id_av;

                        var availabilities = [];
                        function selectAvTask() {
                            button_av_task.onclick = (e) => {
                                e.preventDefault();
                                selectedAvTaskValue = [].filter
                                    .call(av_task.options, option => option.selected)
                                    .map(option => option.value)[0];
                                i_id_av = selectedAvTaskValue.split(/[-,]/);

                                for (var i=0, n=av_task.options.length;i<n;i++) {
                                var x = document.getElementById("wrap-av-task-" + i);

                                i == i_id_av[0] ? x.style.display = "" : x.style.display = "none";
                                }
                            };
                        }

                        function selectAvDuration() {
                            button_av_duration.onclick = (e) => {
                                e.preventDefault();
                                selectedAvDurationValue = [].filter
                                    .call(av_duration.options, option => option.selected)
                                    .map(option => option.value)[0];

                                console.log('selectedAvDurationValue:', selectedAvDurationValue);

                                // call ajax to fetch selected duration data fron Notion
                                $.ajax({
                                url: '/notion/select_team_availabilities.json',
                                data: {duration: selectedAvDurationValue, task: i_id_av[1]},
                                dataType: "json",
                                success: function(response) {
                                // { availabilities: availabilities }
                                // { cuid: ... , score: ...}
                                // { cuid: ... , scores: [...]}

                                var availabilities = response.availabilities;

                                availabilities.forEach(function (object, i) {
                                    let score = 0;
                                    if (selectedAvDurationValue == 0) {
                                        score = object.score * 20;
                                    } else {
                                        let score_length = object.scores.length;
                                        console.log("object: ", object);
                                        object.scores.forEach((x, index)=>{
                                            score = score + x;
                                        })
                                        score = score/score_length * 20;
                                        score = score.toFixed(1)
                                    }
                                    console.log(score);
                                    console.log('document.getElementsByClassName...[i_id_av[0]]:', document.getElementsByClassName("circle per-av-user-" + i)[i_id_av[0]]);
                                    document.getElementsByClassName("name-av-" + i)[i_id_av[0]].innerHTML = object.username
                                    document.getElementsByClassName("score-av-" + i)[i_id_av[0]].innerHTML = score
                                    // override css value
                                    document.getElementsByClassName("circle per-av-user-" + i)[i_id_av[0]].style.backgroundImage = "conic-gradient(#B5838D " + score +  "%, #FFCDB2 0)";
                                    document.getElementsByClassName("circle per-av-user-" + i)[i_id_av[0]].style.display = "";
                                });
                                }
                                });
                            };
                        }
                    </script>
                </div>
            </div><!-- End Member availability  -->

            <!-- Member help needs  -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Member help needs <span>| This Week</span></h5>
                    <!-- Select task & duration -->
                    &nbsp;<select id="help-task-selection">
                        <% @task_list.each_with_index do |task, i| %>
                        <option value="<%= i.to_s%>-<%= task.id.to_s%>"><%= task.name%></option>
                        <% end %>
                    </select>
                    &nbsp;<button id="btn-help-task" onclick="selectHelpTask()" class="btn btn-custom-success btn-sm" ><i class="fa-solid fa-play" style="color: white;"></i></button>
                    <select id="help-duration-selection">
                        <% @duration_list.each_with_index do |duration, i| %>
                        <option value="<%= i.to_s%>"><%= duration%></option>
                        <% end %>
                    </select>
                    &nbsp;<button id="btn-help-duration" onclick="selectHelpDuration()" class="btn btn-custom-success btn-sm" ><i class="fa-solid fa-play" style="color: white;"></i></button>
                    <!-- End Select task & duration -->
                   <% @task_list.each_with_index do |task, i| #assuming that maximun number of teammates = 6 %>
                        <div class="wrap-circles" id= "wrap-help-task-<%=i.to_s%>" style="display: none;">
                        <div style="font-size: 25px; color: #9dd0be;">help needs</div>
                        <% 6.times do |j|%>
                            <div class="circle per-help-user-<%=j%>" style="display: none;">
                                <div class="inner"><div class="name-help-<%= j%>"></div></div>
                            </div>
                            <div class="score-help-<%= j%>" style="font-size: 28px; margin-top: 120px; color: #9dd0be;"></div>
                        <% end %>
                        </div>
                        <div class="wrap-circles" id= "wrap-status-task-<%=i.to_s%>" style="display: none;">
                        <div style="font-size: 25px; color: #9dd0be;">task statuses</div>
                        <% 6.times do |j|%>
                            <div class="circle per-status-user-<%=j%>" style="display: none;">
                                <div class="inner"><div class="name-status-<%= j%>"></div></div>
                            </div>
                            <div class="score-status-<%= j%>" style="font-size: 28px; margin-top: 120px; color: #9dd0be;"></div>
                        <% end %>
                        </div>
                    <% end %>

                    <script>
                        const help_task = document.querySelector('#help-task-selection');
                        const button_help_task = document.querySelector('#btn-help-task');
                        const help_duration = document.querySelector('#help-duration-selection');
                        const button_help_duration = document.querySelector('#btn-help-duration');

                        var selectedHelpTaskValue;
                        var selectedHelpDurationValue;
                        var i_id_help;

                        var helpailabilities = [];
                        function selectHelpTask() {
                            button_help_task.onclick = (e) => {
                                e.preventDefault();
                                selectedHelpTaskValue = [].filter
                                    .call(help_task.options, option => option.selected)
                                    .map(option => option.value)[0];
                                i_id_help = selectedHelpTaskValue.split(/[-,]/);

                                for (var i=0, n=help_task.options.length;i<n;i++) {
                                var x = document.getElementById("wrap-help-task-" + i);
                                var y = document.getElementById("wrap-status-task-" + i);


                                i == i_id_help[0] ? x.style.display = "" : x.style.display = "none";
                                i == i_id_help[0] ? y.style.display = "" : y.style.display = "none";

                                }
                            };
                        }

                        function selectHelpDuration() {
                            button_help_duration.onclick = (e) => {
                                e.preventDefault();
                                selectedHelpDurationValue = [].filter
                                    .call(help_duration.options, option => option.selected)
                                    .map(option => option.value)[0];

                                console.log('selectedHelpDurationValue:', selectedHelpDurationValue);

                                // call ajax to fetch selected duration data fron Notion
                                $.ajax({
                                url: '/notion/select_team_help_needs.json',
                                data: {duration: selectedHelpDurationValue, task: i_id_help[1]},
                                dataType: "json",
                                success: function(response) {
                                // { availabilities: availabilities }
                                // { cuid: ... , score: ...}
                                // { cuid: ... , scores: [...]}

                                var needs = response.needs;

                                needs.forEach(function (object, i) {
                                    let score = 0;
                                    let task_score = 0;
                                    if (selectedHelpDurationValue == 0) {
                                        score = object.score * 20;
                                        task_score = object.task_score * 20;
                                    } else {
                                        let score_length = object.scores.length;
                                        console.log("object: ", object);
                                        object.scores.forEach((x, index)=>{
                                            score = score + x;
                                        })
                                        score = score/score_length * 20;
                                        score = score.toFixed(1)

                                        let task_score_length = object.task_scores.length;
                                        object.task_scores.forEach((x, index)=>{
                                            task_score = task_score + x;
                                        })
                                        task_score = task_score/task_score_length * 20;
                                        task_score = task_score.toFixed(1)
                                    }
                                    console.log(score);
                                    console.log('document.getElementsByClassName...[i_id_help[0]]:', document.getElementsByClassName("circle per-help-user-" + i)[i_id_help[0]]);
                                    document.getElementsByClassName("name-help-" + i)[i_id_help[0]].innerHTML = object.username
                                    document.getElementsByClassName("score-help-" + i)[i_id_help[0]].innerHTML = score
                                    // override css value
                                    document.getElementsByClassName("circle per-help-user-" + i)[i_id_help[0]].style.backgroundImage = "conic-gradient(#B5838D " + score +  "%, #FFCDB2 0)";
                                    document.getElementsByClassName("circle per-help-user-" + i)[i_id_help[0]].style.display = "";

                                    document.getElementsByClassName("name-status-" + i)[i_id_help[0]].innerHTML = object.username
                                    document.getElementsByClassName("score-status-" + i)[i_id_help[0]].innerHTML = task_score
                                    // override css value
                                    document.getElementsByClassName("circle per-status-user-" + i)[i_id_help[0]].style.backgroundImage = "conic-gradient(#B5838D " + task_score +  "%, #FFCDB2 0)";
                                    document.getElementsByClassName("circle per-status-user-" + i)[i_id_help[0]].style.display = "";
                                });
                                }
                                });
                            };
                        }
                    </script>
                </div>
            </div><!-- End Member help needs  -->

            <!-- Notion import  -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Importing from Notion&nbsp;<i class="fa-solid fa-hand-holding-heart"></i></h5>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="card">
                            <div class="card-body" style="text-align: center;">
                                    <h6 class="card-title">Daily report&nbsp;<a href="<%= @report_link%>" target="_blank"><i class="fa-solid fa-database"></i></a></h6>
                                    <% if @create_report_db%>
                                        <button type="button" class="btn btn-custom-success btn-sm">
                                        <%= link_to("Create db","/reports/create_report_db",  class: "nav-link active", style: "text-decoration: none; color: black;", method: :post)%></button>
                                    <% else %>
                                        <button type="button" class="btn btn-custom-danger btn-sm">
                                        <%= link_to("Import","/notion/import_daily_reports", class: "nav-link active", style: "text-decoration: none; color: black;", method: :post)%></button>
                                    <% end %>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="card">
                            <div class="card-body" style="text-align: center;">
                                    <h6 class="card-title">Daily availability&nbsp;<a href="<%= @availability_link%>" target="_blank"><i class="fa-solid fa-smile"></i></a></h6>
                                    <% if @create_availability_db %>
                                        <button type="button" class="btn btn-custom-success btn-sm">
                                        <%= link_to("Create db","/reports/create_availability_db",  class: "nav-link active", style: "text-decoration: none; color: black;", method: :post)%></button>
                                    <% else %>
                                        <button type="button" class="btn btn-custom-danger btn-sm">
                                        <%= link_to("Import","/notion/import_daily_availabilities", class: "nav-link active", style: "text-decoration: none; color: black;", method: :post)%></button>
                                    <% end %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- End Notion import  -->
    </div>
</section>
</div>

<!-- Vendor JS Files -->
<script src="../assets/vendor/apexcharts/apexcharts.min.js"></script>
<script src="../assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="../assets/vendor/chart.js/chart.min.js"></script>
<script src="../assets/vendor/echarts/echarts.min.js"></script>

<!-- Template Main JS File -->
<script src="../assets/js/main.js"></script>
